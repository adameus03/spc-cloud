<p>
  <span class="spc-navigable" title="Return to parent dir" onclick="returnToParent('<%= locals.currentDirectory %>')">↩️</span>
  <span class="spc-navigable" title="Refresh this dir" onclick="reloadCurrentDir('<%= locals.currentDirectory %>')">🔄</span>
  <span> Current directory: <i><%= locals.currentDirectory %></i></span>
</p>
<table class="table table-hover table-dark">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">Size</th>
      <th scope="col">Mode</th>
      <th scope="col">Ops</th>
    </tr>
  </thead>
  <tbody>
    <% if(locals.filesList) { %>
      <% for (let i = 0; i < locals.filesList.length; i++) { %>
        <tr id="tr<%= i %>">
          <th scope="row"><%= i + 1 %></th>
          <td>
            <% if(locals.filesList[i].isDir) { %>
              <b class="spc-navigable" onclick="navigationTriggered('<%= locals.filesList[i].name %>', '<%= locals.currentDirectory %>')">
            <% } %>
            <%= locals.filesList[i].name %>
            <% if(locals.filesList[i].isDir) { %>
              </b><%= locals.filesList[i].isDir?'📁':'' %>
            <% } %>
          </td>
          <td><%= locals.filesList[i].size %></td>
          <%
            let getDownloadHref = (fname) => {
              let href = "/api/download?f=";
              if(locals.currentDirectory.endsWith('/')) {
                href += locals.currentDirectory + fname;
              } else {
                href += locals.currentDirectory + '/' + fname;
              }
              if(href.startsWith('/')) {
                href = href.substring(1);
              }
              return href;
            };
          %>
          <td>
            <span title="private" >🔐</span>
            <span title="shared" class="spc-navigable" onclick="getKey('<%= locals.filesList[i].name %>', '<%= locals.currentDirectory %>')">🌐</span>
            <span title="can read">👁️</span>
            <span title="can write">🖊️</span>
            <span title="you own this">😎</span>
          </td>
          <td>
            <a href="<%= getDownloadHref(locals.filesList[i].name) %>" title="Download">⬇️</a>
            <% if(locals.filesList[i].isDir) { %>
              <a href="#" title="Propagate">📢</a>
            <% } else { %>
              <a href="#"> </a>
            <% } %>
            <span title="Throw to rubbish" class="spc-navigable" onclick="deleteFile('<%= locals.filesList[i].name %>', '<%= locals.currentDirectory %>', '<%= i %>')">🗑️</span>
          </td>
        </tr>
      <% } %>
    <% } %>
    <!--<tr>
      <th scope="row">1</th>
      <td>sample.jpg</td>
      <td><a href="/api/download?f=sample.jpg">⬇️</a></td>
    </tr>
    <tr>
      <th scope="row">2</th>
      <td>sample1.jpg</td>
      <td><a href="/api/download?f=sample1.jpg">⬇️</a></td>
    </tr>
    <tr>
      <th scope="row">3</th>
      <td>sample2.jpg</td>
      <td><a href="/api/download?f=sample2.jpg">⬇️</a></td>
    </tr>-->
  </tbody>
</table>

<style>
  .spc-navigable {
    cursor: pointer;
  }
</style>
<script>
  function navigationTriggered(fname, currDir) {
    //alert(fname); //for now
    let newHref = "/list-gui?d=" + currDir;
    if(currDir.endsWith("/")) {
      newHref += fname;
    } else {
      newHref += "/" + fname;
    }
    window.location.href = newHref;
  }

  function returnToParent(currDir) {
    let newHref = "/list-gui?d=" + currDir;
    if(currDir.endsWith("/")) {
      newHref = newHref.substring(0, newHref.length - 1);
    }
    let lastSlashIndex = newHref.lastIndexOf("/");
    if(lastSlashIndex > -1) {
      newHref = newHref.substring(0, lastSlashIndex /*+1*/);
    }
    window.location.href = newHref;
  }

  function reloadCurrentDir(currDir) {
    /*if (currDir.endsWith("/")) {
      currDir = currDir.substring(0, currDir.length - 1);
    }
    if (currDir.startsWith("/")) {
      currDir = currDir.substring(1);
    }*/
    window.location.href = "/list-gui?d=" + currDir;
  }

  function getKey(fileName, currentDirectory) {
    console.log(fileName + currentDirectory);
    $.ajax({
      type: 'GET',
      url: '/api/getKey',
      headers: {'Content-Type': 'application/x-www-form-urlencoded'},
      contentType: 'application/x-www-form-urlencoded; charset=utf-8',
      dataType: 'json',
      data: {
        "fileName": fileName,
        "currentDirectory": currentDirectory    
      },
      success: function(data, status) {
        if (data.success) {
          alert(data.success);
        }
        else if (data.error) {
          alert(data.error);
        }
        else {
          alert(`Error getting key. Got unexpected response: ${data}`);
        }
        
        //alert("File deleted successfully");
        //window.location.href = "/list-gui?d=" + currDir;
        $("#tr" + trId).remove();
      },
      error: (jqXHR, textStatus, errorThrown) => {
        alert(`Error getting key. Status: ${textStatus}; data: ${jqXHR.responseText}`);
      }
    });
  }

  function deleteFile(fname, currDir, trId) {
    let delFilePath = currDir;
    if (currDir.endsWith("/")) {
      delFilePath += fname;
    } else {
      delFilePath += "/" + fname;
    }
    /*$.post("/api/delete", {f: delFilePath}, function(data, status) {

      if(status === "success") {
        if (data.success) {
          alert(data.success);
        }
        else if (data.error) {
          alert(data.error);
        }
        else {
          alert(`Error deleting file. Got unexpected response: ${data}`);
        }
        
        //alert("File deleted successfully");
        //window.location.href = "/list-gui?d=" + currDir;
        $("#tr" + trId).remove();
      } else {
        alert(`Error deleting file. Status: ${status}; data: ${data}`);
      }
    });*/
    $.ajax({
      type: 'POST',
      url: '/api/delete',
      headers: {'Content-Type': 'application/x-www-form-urlencoded'},
      contentType: 'application/x-www-form-urlencoded; charset=utf-8',
      dataType: 'json',
      data: {f: delFilePath},
      success: function(data, status) {
        if (data.success) {
          alert(data.success);
        }
        else if (data.error) {
          alert(data.error);
        }
        else {
          alert(`Error deleting file. Got unexpected response: ${data}`);
        }
        
        //alert("File deleted successfully");
        //window.location.href = "/list-gui?d=" + currDir;
        $("#tr" + trId).remove();
      },
      error: (jqXHR, textStatus, errorThrown) => {
        alert(`Error deleting file. Status: ${textStatus}; data: ${jqXHR.responseText}`);
      }
    });
  }
</script>